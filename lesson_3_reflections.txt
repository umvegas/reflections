When would you want to use a remote repository rather than keeping all your
work local?

If I wanted to work on a project from different computers or with other people
in other places.


Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

Pulling automatically might cause problems with work in progress locally. I
might want to incorporate changes from the origin eventually, but not until
I have finished working on my local changes.


Describe the differences between forks, clones, and branches. When would you
use one instead of another?

A branch is an isolated line of work. A clone is a copy of a repository. A fork
is a clone that GitHub has made of a repository that lives on their servers,
the copy also lives on their servers.


What is the benefit of having a copy of the last known state of the remote
stored locally?

You can compare the work you've done with the state of the remote that you
started working on. It's easier to understand what work you've done that way
than if you had to compare your work to the state of the remote master after
you did the work.


How would you collaborate without using Git or GitHub? What would be easier,
and what would be harder?

Collaborating with GitHub requires learning how to use the system, which is a
little complicated, but it is much better than trying to send code back and
forth using email and manually doing diffs and merges.


When would you want to make changes in a separate branch rather than directly
in master? What benefits does each approach have?

Working directly on the master branch is simpler than working on a separate
branch and then merging. Working on a separate branch is better in cases where
the changes you need to make might entail several commits, each of which might
not be ready for exposure to the master. It also helps to have separate branches
when more than one significant change has to happen at once. This allows work on
each of the changes to progress separately. Each change is only merged into the
master when that change is ready for prime time.
wh
